## Layer 1: Base image layer for dependencies
# base image
FROM node:alpine AS deps
RUN apk add --no-cache libc6-compat
# set working directory
WORKDIR /app
# app dependencies, install, caching
COPY package.json yarn.lock* ./
COPY .pnp.cjs ./.pnp.cjs
COPY .yarnrc.yml ./.yarnrc.yml
COPY .pnp.loader.mjs ./.pnp.loader.mjs
COPY .yarn ./.yarn
RUN \
    if [ -f yarn.lock ]; then yarn install --immutable; \
    else echo "Lockfile not found." && exit 1; \
    fi

## Layer 2: Copy all files except in .dockerignore && build
FROM node:alpine AS builder
WORKDIR /app
COPY . .
COPY --from=deps /app/.yarn ./.yarn
COPY .env .env
ENV NEXT_TELEMETRY_DISABLED 1
RUN yarn build

## Layer 3: Run server
FROM node:alpine AS runner
WORKDIR /app
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs
RUN npm install -g pm2
COPY ecosystem.development.js ./ecosystem.config.js
COPY --from=deps /app/.pnp.cjs ./.pnp.cjs
COPY --from=builder /app/.yarn ./.yarn
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./build
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./build/.next/static
COPY --from=builder /app/public ./build/public

USER nextjs

EXPOSE 3000

CMD ["pm2-runtime", "start", "ecosystem.config.js"]
